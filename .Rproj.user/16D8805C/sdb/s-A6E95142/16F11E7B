{
    "contents" : "\n#' @title Clean ID\n#' @description Provides a method for applying both cleaning functions (clean_x and clean_pb) to a dataframe by index.\n#' @param data is a data.frame containing any number of columns.\n#' @param cols is a list of integers or column names indicating the columns that are to be cleaned up.\n#' @param FUN is a list of functions to pass to the specified columns (must be in same order as the column index)\n#' @details This function is meant to be used on multiple columns at once. It makes use of the magrittr pipe operator to provide neat code.\n#' @return Returns a dataframe with replacements in the specified columns\n#' @seealso clean_x, clean_pb\n#' @examples\n#' df <- data.frame(pbnum = c(\"PB123\", \"PB 0034\", \"  5678 \", \"None\"),\n#' status = c(\"Active\", \"Closed\", \"Closed\", \"Active\"),\n#' xnum = c(\"X00123\", \"9512\", \"X789\", \"NOT IN APS\"))\n#'\n#' #' df %>% clean_id(cols = c(1,3), FUN = c(\"clean_pb\", \"clean_x\"))\n#'\n#' #' clean_id(data = df, cols = c(1,3), FUN = c(\"clean_pb\", \"clean_x\"))\n\n# Take a dataframe (df) and apply both cleaning functions and return the clean dataframe\n#' @import magrittr\n#' @export\nclean_id <- function(data, cols = list(), FUN = list()) {\n\n  if (length(cols) != length(FUN)) {\n    warning(\"The number of columns specified must equal the number of functions supplied.\")\n  } else { # make sure the specified columns equals the number of functions to apply\n\n  possible_functions <- FUN  # rename the list of functions\n\n  separated <- lapply(data, `[`)  # separate the original dataframe into a list containing each column as an element\n  separated <- separated[cols]  # select only the elements that relate to the columns being cleaned\n\n  temp <- list()  # initialize temporary container\n\n  for (i in 1:length(cols)) {\n    temp[i] <- lapply(separated[i], FUN = possible_functions[i])  # apply the specified function to each element of the list\n  }\n\n  data[,cols] <- temp  # overwrite the original dataframe columns specified by the user with the cleaned version\n\n  return(data)  # return the final dataframe\n\n  }\n\n}\n",
    "created" : 1451761865871.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2669774440",
    "id" : "16F11E7B",
    "lastKnownWriteTime" : 1451761880,
    "path" : "~/identifyr/R/clean_id.R",
    "project_path" : "R/clean_id.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}